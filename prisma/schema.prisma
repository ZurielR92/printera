// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}



model User {

  id            String @id @default(uuid())
  name          String
  role          String
  phone         String @unique
  password      String
  created_by_id String
  created_by    User @relation("user_created_by", fields: [created_by_id], references: [id])
  users_created User[] @relation("user_created_by")
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  deleted_at    DateTime?
  is_active     Boolean @default(true)
  created_categories    Category[]
  created_costs         ProductCost[]
  created_prices        ProductPrice[]
  created_products      Product[]
}

model Category {
  id                  String @id @default(uuid())
  name                String @unique
  description         String?
  user_id             String
  created_by          User @relation(fields: [user_id], references: [id])
  is_active           Boolean @default(true)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  deleted_at          DateTime?
  products            Product[]
}

model Product {
  id                  String @id @default(uuid())
  name                String @unique
  description         String?
  type                String
  process             String
  meausure_unit       String
  in_inventory        Boolean @default(false)
  category_id         String
  category            Category @relation(fields: [category_id], references: [id])
  costs               ProductCost[]
  prices              ProductPrice[]
  components          ProductComponent[] @relation("component_in_product")
  in_components       ProductComponent[] @relation("product_in_component")
  user_id             String
  user                User @relation(fields: [user_id], references: [id])
  is_active           Boolean @default(true)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  deleted_at          DateTime?
}

model ProductComponent {
  id                  String @id @default(uuid())
  description         String?
  width               Decimal @default(1)
  height              Decimal @default(1)
  quantity            Decimal @default(1)
  in_product_id       String
  in_product          Product @relation("component_in_product", fields: [in_product_id], references: [id])
  in_component_id     String
  in_component        Product @relation("product_in_component", fields: [in_component_id], references: [id])
}

model ProductCost {
  id                  String @id @default(uuid())
  name                String
  description         String?
  cost                Decimal @default(0)
  is_active           Boolean @default(true)
  product_id          String
  product             Product @relation(fields: [product_id], references: [id])
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  deleted_at          DateTime?
  user_id             String
  user                User @relation(fields: [user_id], references: [id])
}

model ProductPrice {
  id                  String @id @default(uuid())
  name                String
  description         String?
  price                Decimal @default(0)
  is_active           Boolean @default(true)
  product_id          String
  product             Product @relation(fields: [product_id], references: [id])
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  deleted_at          DateTime?
  user_id             String
  user                User @relation(fields: [user_id], references: [id])
}